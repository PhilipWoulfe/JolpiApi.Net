name: CI

on:
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - '**'

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore

    - name: Install GitVersion.Tool
      run: dotnet tool install --global GitVersion.Tool

    - name: Determine version
      id: gitversion
      run: dotnet-gitversion /output json /showvariable SemVer

    - name: Build
      run: dotnet build --no-restore --configuration Release

    - name: Run tests
      run: dotnet test --no-build --verbosity normal --configuration Release

  publish:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.ref == 'refs/heads/master' && success()

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
         fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '8.0.x'

    - name: Install GitVersion.Tool
      run: dotnet tool install --global GitVersion.Tool

    - name: Determine version
      id: gitversion
      run: dotnet-gitversion /output json /showvariable SemVer

    - name: Configure Git
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"

    - name: Create Git Tag
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        VERSION=$(dotnet-gitversion /showvariable SemVer)
        git tag -a "v$VERSION" -m "Release version $VERSION"
        git push origin "v$VERSION"

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore --configuration Release

    - name: Pack NuGet package
      run: dotnet pack --no-build --configuration Release --output ./nupkg /p:PackageVersion=$(dotnet-gitversion /showvariable SemVer) -include-symbols -p:SymbolPackageFormat=snupkg 
 
    - name: Publish NuGet package
      env:
         NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
      run: dotnet nuget push ./nupkg/*.nupkg --api-key $NUGET_API_KEY --source https://api.nuget.org/v3/index.json
 
    - name: Publish Symbols package
      env:
         NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
      run: dotnet nuget push ./nupkg/*.snupkg --api-key $NUGET_API_KEY --source https://api.nuget.org/v3/index.json